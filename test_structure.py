# Test de la nueva estructura modular de MiloApps
import sys
import os

# Agregar src al path para importar m√≥dulos
sys.path.insert(0, 'src')

def test_imports():
    """Probar que todos los imports funcionen correctamente"""
    print("üß™ PROBANDO NUEVA ESTRUCTURA MODULAR...")
    print("=" * 50)
    
    try:
        # Probar imports del core
        print("üì¶ Probando imports del core...")
        from core.models import User, db, create_initial_data
        print("   ‚úÖ Models importado correctamente")
        
        from core.config import get_config
        print("   ‚úÖ Config importado correctamente")
        
        from core.utils import log_audit, get_user_apps
        print("   ‚úÖ Utils importado correctamente")
        
        print("‚úÖ CORE: Todos los imports funcionan")
        print()
        
        # Probar imports de la app de auth
        print("üîê Probando imports de Auth App...")
        try:
            from apps.auth.routes import auth_bp
            print("   ‚úÖ Auth routes importado correctamente")
        except ImportError as e:
            print(f"   ‚ö†Ô∏è Error en auth routes: {e}")
        
        try:
            from apps.auth.forms import LoginForm
            print("   ‚úÖ Auth forms importado correctamente")
        except ImportError as e:
            print(f"   ‚ö†Ô∏è Error en auth forms: {e}")
        
        print("‚úÖ AUTH APP: Estructura lista")
        print()
        
        # Probar imports de MiloSign
        print("‚úçÔ∏è Probando imports de MiloSign App...")
        try:
            from apps.milosign.routes import milosign_bp
            print("   ‚úÖ MiloSign routes importado correctamente")
        except ImportError as e:
            print(f"   ‚ö†Ô∏è Error en milosign routes: {e}")
        
        try:
            from apps.milosign.models import Document
            print("   ‚úÖ MiloSign models importado correctamente")
        except ImportError as e:
            print(f"   ‚ö†Ô∏è Error en milosign models: {e}")
        
        print("‚úÖ MILOSIGN APP: Estructura lista")
        print()
        
        # Probar la aplicaci√≥n principal
        print("üöÄ Probando aplicaci√≥n principal...")
        from app_new import create_app
        print("   ‚úÖ App factory importado correctamente")
        
        # Crear instancia de prueba
        app = create_app('testing')
        print("   ‚úÖ Aplicaci√≥n creada correctamente")
        
        print("‚úÖ APLICACI√ìN PRINCIPAL: Lista para usar")
        print()
        
        return True
        
    except Exception as e:
        print(f"‚ùå ERROR: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_structure():
    """Verificar que la estructura de archivos est√© correcta"""
    print("üìÅ VERIFICANDO ESTRUCTURA DE ARCHIVOS...")
    print("=" * 50)
    
    expected_files = [
        'src/core/__init__.py',
        'src/core/models.py',
        'src/core/config.py', 
        'src/core/utils.py',
        'src/apps/auth/routes.py',
        'src/apps/auth/forms.py',
        'src/apps/milosign/routes.py',
        'src/apps/milosign/models.py',
        'src/apps/milosign/forms.py',
        'src/app_new.py'
    ]
    
    missing_files = []
    
    for file_path in expected_files:
        if os.path.exists(file_path):
            print(f"   ‚úÖ {file_path}")
        else:
            print(f"   ‚ùå {file_path} - FALTANTE")
            missing_files.append(file_path)
    
    if missing_files:
        print(f"\n‚ö†Ô∏è ARCHIVOS FALTANTES: {len(missing_files)}")
        return False
    else:
        print("\n‚úÖ ESTRUCTURA COMPLETA")
        return True

def main():
    """Funci√≥n principal de prueba"""
    print("üéØ INICIANDO PRUEBAS DE ESTRUCTURA MODULAR")
    print("=" * 60)
    print()
    
    # Cambiar al directorio ra√≠z del proyecto
    os.chdir(os.path.dirname(os.path.abspath(__file__)))
    
    # Probar estructura de archivos
    structure_ok = test_structure()
    print()
    
    # Probar imports si la estructura est√° bien
    if structure_ok:
        imports_ok = test_imports()
        print()
        
        if imports_ok:
            print("üéâ ¬°ESTRUCTURA MODULAR LISTA!")
            print("=" * 60)
            print()
            print("üìã PR√ìXIMOS PASOS:")
            print("1. Detener el servidor actual")
            print("2. Reemplazar app.py por app_new.py")
            print("3. Actualizar templates para usar nueva estructura")
            print("4. Probar cada aplicaci√≥n individualmente")
            print("5. Migrar datos si es necesario")
            print()
            print("üöÄ PARA INICIAR CON NUEVA ESTRUCTURA:")
            print("   python src/app_new.py")
        else:
            print("‚ùå HAY ERRORES EN LOS IMPORTS")
            print("üîß Revisa los errores y corr√≠gelos antes de continuar")
    else:
        print("‚ùå LA ESTRUCTURA NO EST√Å COMPLETA")
        print("üîß Crea los archivos faltantes primero")

if __name__ == '__main__':
    main()